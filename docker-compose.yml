services:
  postgres_db:
    image: postgres:15
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: prisma
    ports:
      - '5432:5432'
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20

  backend:
    build:
      context: ./musicaberta-backend
    container_name: backend
    stdin_open: true
    tty: true
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - "3333:3333"
    env_file:
      - ./musicaberta-backend/.env
    volumes:
      - ./musicaberta-backend:/usr/src/app
    networks:
      - prisma-network

  frontend:
    build:
      context: ./musicaberta-frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    env_file:
      - ./musicaberta-frontend/.env
    volumes:
      - ./musicaberta-frontend:/usr/src/app
    networks:
      - prisma-network

  prisma-studio:
    image: node:lts-alpine3.17
    working_dir: /usr/src/app
    volumes:
      - ./musicaberta-backend:/usr/src/app
    command: npx prisma studio --port 5555 --browser none
    ports:
      - "5555:5555"
    env_file:
      - ./musicaberta-backend/.env
    networks:
      - prisma-network
    depends_on:
      postgres_db:
        condition: service_healthy
      backend:
        condition: service_started


  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  
      - "9001:9001"  
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - prisma-network

networks:
  prisma-network:
    name: prisma-network

volumes:
  postgres_data:
  minio_data:
